on: 
  workflow_dispatch:
    inputs:
      youtube_url:
        description: "YouTube video to convert"
        required: true
      output_type:
        type: choice
        description: video or audio
        options:
          - mp3
          - mp4
          - default

jobs:
  convertVideo:
    runs-on: ubuntu-latest
    steps:
    - run: actions/checkout@v4
    - run: |
        python -m pip install virtualenv
        python -m virtualenv -p python mpthree
        source mpthree/bin/activate
        python -m pip install --upgrade yt-dlp
        curl -OLJ https://github.com/jqlang/jq/releases/download/jq-1.7/jq-linux-amd64
        chmod a+x jq-linux-amd64
        curl -OJL https://github.com/yt-dlp/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz
        tar -xf ffmpeg-master-latest-linux64-gpl.tar.xz
        mv ffmpeg-master-latest-linux64-gpl/bin/ff* .
        chmod +x ffmpeg
        export PATH=${PWD}:$PATH
        if [[ "${{ github.event.inputs.output_type }}" == "mp3" ]]
        then
          EXTRACT_OPT=--extract-audio
          FORMAT_OPT=--audio-format
          FORMAT_ARG=mp3
        elif [[ "${{ github.event.inputs.output_type }}" == "mp4" ]]
        then
          EXTRACT_OPT=
          FORMAT_OPT=--format
          FORMAT_ARG=mp4
        else
          EXTRACT_OPT=
          FORMAT_OPT=
          FORMAT_ARG=
        fi
        mkdir workspace
        cd workspace
        yt-dlp $EXTRACT_OPT $FORMAT_OPT $FORMAT_ARG ${{ github.event.inputs.youtube_url }}
        #for f in *\ *; do mv "$f" "${f// /_}"; done
        OUTFILE=$( ls )
        echo "file name: $OUTFILE"
        echo "Download ready" >> $GITHUB_STEP_SUMMARY
        curl -F "file=@${OUTFILE}" https://tmpfiles.org/api/v1/upload | jq-linux-amd64 '.data.url' >> $GITHUB_STEP_SUMMARY
